//@ sourceMappingURL=client.map
// Generated by CoffeeScript 1.6.1

/*
  Здесь реализован веьс клиентский JavaScript. Подразумевается, что модель
  подключается заранее.
*/


(function() {

  (function($) {
    return $(document).ready(function() {
      var Viewer, en, me, setPlayerDiv, socket;
      socket = io.connect(document.URL.match(/^http:\/\/[^/]*/));
      Viewer = function(obj) {
        var html;
        if (obj instanceof Player) {
          html = "<div id='" + this.name + "' class='player'>\n  <div class='left' style='background:rgb(" + 50 + "," + 255 + "," + 20 + ");display: inline-block;width: 10px;'>" + this.ml + "</div>\n  <div class=\"main\" style='background:rgb(" + 255 + "," + 0 + "," + 0 + ");display: inline-block;width: 70px;'>" + this.name + "</div>\n  <div class='right' style='background:rgb(" + 50 + "," + 255 + "," + 20 + ");display: inline-block;width:20px;'>" + this.mr + "</div>\n</div>";
          return html;
        }
        if (obj instanceof Enemy) {
          return alert("This is class Enemy");
        }
      };
      setPlayerDiv = function(pl) {
        var plDiv;
        plDiv = $('#' + pl.name);
        if (plDiv.length === 0) {
          plDiv = $(document.body).append(pl.html());
          plDiv = $('#' + pl.name);
        }
        plDiv.css('left', pl.x + 'px');
        return plDiv.css('top', pl.y + 'px');
      };
      me = new Player();
      en = new Enemy();
      setPlayerDiv(me);
      socket.emit('add user', me.raw());
      socket.on('user have been added', function(data) {
        return setPlayerDiv(new Player(data));
      });
      socket.on('user have been changed', function(data) {
        return setPlayerDiv(new Player(data));
      });
      socket.on('enemy have been added', function(data) {
        return setPlayerDiv(new Enemy(data));
      });
      socket.on('enemy have been changed', function(data) {
        return setPlayerDiv(new Enemy(data));
      });
      return $("body").keydown(function(e) {
        var _ref;
        switch (e.keyCode) {
          case 37:
            me.x -= 10;
            break;
          case 38:
            me.y -= 10;
            break;
          case 39:
            me.x += 10;
            break;
          case 40:
            me.y += 10;
            break;
          case 83:
            en.x = me.x;
            en.y = me.y + 100;
            setPlayerDiv(en);
            /*
             while(en.x<=100)
              en.x++
              setPlayerDiv(en)
              socket.emit('add enemy', en.raw())
              socket.emit('change enemy', en.raw())
            */

        }
        if (String.fromCharCode(e.keyCode) === en.cd) {
          en.x = Math.ceil(Math.random() * 500);
          en.y = Math.ceil(Math.random() * 500);
          setPlayerDiv(en);
          socket.emit('change enemy', en.raw());
        }
        if (String.fromCharCode(e.keyCode) === me.ml) {
          me.x -= 10;
          me.ml = "" + (String.fromCharCode(Math.ceil(65 + Math.random() * 25)));
          setPlayerDiv(me);
          socket.emit('change user', me.raw());
        }
        if (String.fromCharCode(e.keyCode) === me.mr) {
          me.x += 10;
          me.mr = "" + (String.fromCharCode(Math.ceil(65 + Math.random() * 25)));
          setPlayerDiv(me);
          socket.emit('change user', me.raw());
        }
        if ((37 <= (_ref = e.keyCode) && _ref <= 40)) {
          setPlayerDiv(me);
          return socket.emit('change user', me.raw());
        }
      });
    });
  })(jQuery);

}).call(this);
